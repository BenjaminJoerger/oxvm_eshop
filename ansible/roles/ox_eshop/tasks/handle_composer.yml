---
- name: Clean vendors
  file: "path={{ eshop.composer.root }}/vendor state=absent"
  when: eshop.composer.clean_vendors

- name: Download composer cache
  get_url: "url={{ eshop.composer.cache_url }} dest=/tmp/composer_cache.tar.gz"
  when: eshop.composer.cache_url

- name: Extract composer cache
  unarchive: src=/tmp/composer_cache.tar.gz dest=~/.composer/ copy=no
  when: eshop.composer.cache_url

- name: Create composer json file
  get_url:
    url: "{{ eshop.composer.json_source_url }}"
    dest: "{{ eshop.composer.root }}/composer.json"
  register: create_composer_json

- name: Create composer lock file
  get_url:
    url: "{{ eshop.composer.lock_source_url }}"
    dest: "{{ eshop.composer.root }}/composer.lock"
  when: create_composer_json.changed

- name: Check if composer lock is located inside a git repository
  shell: "cd {{ eshop.composer.root }} && git status"
  ignore_errors: yes
  changed_when: false
  register: composer_lock_git_repo

- name: Check if composer lock needs to be deleted
  shell: "cd {{ eshop.composer.root }} && [ \"$(git merge-base 0f17ddbf6e78179803e5577ab90244f1b3cfa1b7 $(git rev-parse --abbrev-ref HEAD))\" = \"0f17ddbf6e78179803e5577ab90244f1b3cfa1b7\" ]"
  ignore_errors: yes
  changed_when: false
  register: composer_lock_delete

- name: Delete composer lock file
  file:
    path: "{{ eshop.composer.root }}/composer.lock"
    state: absent
  when: composer_lock_git_repo.rc == 0 and composer_lock_delete.rc == 0

- name: Run composer install
  shell: "cd {{ eshop.composer.root }} && {{ eshop.composer.env }} composer install --prefer-{{ eshop.composer.prefer }}"
